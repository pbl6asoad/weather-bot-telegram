const { stickers } = require('./constants')
const { forecast } = require('../forecast')
const { geocode } = require('../geocode')
const { transformTemperature } = require('./helper')

const handleMessage = async (bot, { 
  text, 
  chat: { 
    id: chatId
  },
  from: {
    first_name,
    username,
    last_name
  }
}) => {
  const [command, messageText] = text.split(' ')

  switch(command){
    case '/start':
      return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ /info –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –±–æ—Ç–µ')
    case '/info':
      return bot.sendMessage(
        chatId, 
        `–ü—Ä–∏–≤–µ—Ç, ${first_name || username}! –≠—Ç–æ—Ç –±–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω @pbl6asoad –∏ –≤ –Ω–µ–º —Ç—ã –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ (–Ω–µ –±–æ–ª–µ–µ 3). –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –Ω–∞–ø–∏—à–∏—Ç–µ /add *–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞*`
      )
    case '/add':
      const city = await geocode(messageText, async (err, {location, latitude, longtitude}) => {
        debugger
        await bot.sendMessage(chatId, `–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ –≤ –≥–æ—Ä–æ–¥–µ ${location}`)
        debugger
        await forecast(latitude, longtitude, (err, { main } = {}) => {
          if(err) return bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ')
          debugger
          return bot.sendMessage(chatId, 
            `–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${location}:
            ${transformTemperature(main)}
            `)
        })
      })
      break;
    default: 
      await bot.sendMessage(
        chatId, 
        `–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ãü•∫, –ø–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é`
      )
      return bot.sendSticker(chatId, stickers.sunset) 
  }

}


module.exports = {
  handleMessage,
}